---
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-source
  namespace: my-ext-secret
  labels:
    app: service
data:
  requirements.txt: |-
    flask
  startup.sh: |-
    #!/bin/bash

    pip3 install -r /src/requirements.txt

    echo "Starting python service..."

    python3 /src/service.py
  service.py: |-
    from flask import Flask
    from flask import request
    import os
    import socket
    import json
    import base64

    app = Flask(__name__)

    @app.route('/headers')
    def return_headers():
      return json.dumps({"headers":str(request.headers)})

    @app.route('/who-am-i')
    def who_am_i():
      user_info = request.headers["User-Info"]
      user_info_json = base64.b64decode(user_info).decode("utf8")
      user_info_obj = json.loads(user_info_json)
      ret_val = {
        "name": user_info_obj["sub"],
        "groups": user_info_obj["groups"]
      }

      return json.dumps(ret_val)

    @app.route('/')
    def hello():
      with open('/etc/secrets/myenv', 'r') as file:
        file_contents = file.read()
      retVal = {
          "vault_secret":file_contents,
          "host":"%s" % socket.gethostname()

      }
      return json.dumps(retVal)

    @app.route("/health-check")
    def health_check():
      ret_val = {
        "status":"I'm not dead yet!"
      }
      return json.dumps(ret_val)

    if __name__ == "__main__":
        app.run(host="0.0.0.0", port=8080, debug=True)
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nginx-secrets
  name: nginx-secrets
  namespace: my-ext-secret
  annotations:
    container.apparmor.security.beta.kubernetes.io/vault-agent: "unconfined"
    container.apparmor.security.beta.kubernetes.io/vault-agent-init: "unconfined"
    vault.hashicorp.com/service: "https://vault.apps.IPADDR.nip.io"
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/log-level: trace
    vault.hashicorp.com/role: extsecret
    vault.hashicorp.com/tls-skip-verify: "true"
    vault.hashicorp.com/agent-inject-secret-myenv: 'secret/data/extsecret/config'
    vault.hashicorp.com/secret-volume-path-myenv: '/etc/secrets'
spec:
  containers:
  - image: python:buster
    name: python
    command:
    - bash
    - -c
    - /src/startup.sh
    volumeMounts:
      - mountPath: /src
        name: sources
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  serviceAccountName: ext-secret-vault
  serviceAccount: ext-secret-vault
  volumes:
  - name: sources
    configMap:
      name: service-source
      defaultMode: 0777
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: nginx-svc
  name: nginx-svc
  namespace: my-ext-secret
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: http-service
  selector:
    app: nginx-secrets

