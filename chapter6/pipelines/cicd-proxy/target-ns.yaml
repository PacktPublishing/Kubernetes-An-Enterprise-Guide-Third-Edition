---
apiVersion: v1
kind: Namespace
metadata:
  name: cicd-ns
---
apiVersion: v1
kind: Namespace
metadata:
  name: target-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: delete-pods
  namespace: target-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: delete-pods
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:cicd-ns:default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: delete-pods
  namespace: target-ns
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-pods
  namespace: target-ns
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: test-pods
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: test-pods
    spec:
      containers:
      - args:
        - while true; do sleep 30; done;
        command:
        - /bin/bash
        - -c
        - --
        image: ubuntu:22.04
        imagePullPolicy: Always
        name: test-pod
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 30