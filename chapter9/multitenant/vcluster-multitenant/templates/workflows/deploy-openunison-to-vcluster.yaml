---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: deploy-openunison-to-vcluster
  namespace: {{ .Release.Namespace }}
spec:
  description: Integrates the vCluster and control plane with OpenUnison
  inList: false
  label: Integrate cp with vcluster
  orgId: 43625c4c-43a5-4e48-89da-7005a60cfcff
  tasks: |-
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
      params: 
        targetName: k8s
        template: |-
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: vcluster-openunison-$nsName$
              namespace: {{ .Release.Namespace }}
            labels:
              name: vcluster-openunison-$nsName$
              app.kubernetes.io/name: openunison
              app.kubernetes.io/instance: openunison-{{ .Release.Name }}
              app.kubernetes.io/component: openunison-vcluster
              app.kubernetes.io/part-of: openunison
            annotations:
              tremolo.io/managedByGit: "$useGit$"
            data:
              satelite.yaml: |-
                network:
                  openunison_host: "k8sou-$nsName$.apps.{{ .Values.vcluster.ip }}.nip.io"
                  dashboard_host: "k8sdb-$nsName$.apps.{{ .Values.vcluster.ip }}.nip.io"
                  api_server_host: "k8sapi-$nsName$.apps.{{ .Values.vcluster.ip }}.nip.io"
                  session_inactivity_timeout_seconds: 900
                  k8s_url: https://0.0.0.0:6443
                  force_redirect_to_tls: true
                  createIngressCertificate: false
                  ingress_type: nginx
                  ingress_annotations:
                    cert-manager.io/cluster-issuer: "enterprise-ca"
                  


                cert_template:
                  ou: "Kubernetes"
                  o: "MyOrg"
                  l: "My Cluster"
                  st: "State of Cluster"
                  c: "MyCountry"

                myvd_config_path: "WEB-INF/myvd.conf"
                k8s_cluster_name: $nsName$
                enable_impersonation: true

                impersonation:
                  use_jetstack: true
                  explicit_certificate_trust: true
                  enablePassthrough: true
                  ca_secret_name: unison-ca

                dashboard:
                  namespace: "kubernetes-dashboard"
                  cert_name: "kubernetes-dashboard-certs"
                  label: "app.kubernetes.io/name=kubernetes-dashboard"
                  service_name: kubernetes-dashboard
                  require_session: true
                certs:
                  use_k8s_cm: false

                trusted_certs:
                  - name: unison-ca
                    pem_b64: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lVYmtiS2ZRN29ldXJuVHpyeWdIL0dDS0kzNkUwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF3d05aVzUwWlhKd2NtbHpaUzFqWVRBZUZ3MHlNakV4TURjeE5EUTFNakphRncwegpNakV4TURReE5EUTFNakphTUJneEZqQVVCZ05WQkFNTURXVnVkR1Z5Y0hKcGMyVXRZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNucVZ3eVFvMjJyRzZuVVpjU2UvR21WZnI5MEt6Z3V4MDkKNDY4cFNTUWRwRHE5UlRRVU92ZkFUUEJXODF3QlJmUDEvcnlFaHNocnVBS2E5LzVoKzVCL3g4bmN4VFhwbThCNwp2RDdldHY4V3VyeUtQc0lMdWlkT0QwR1FTRVRvNzdBWE03RmZpUk9yMDFqN3c2UVB3dVB2QkpTcDNpa2lDL0RjCnZFNjZsdklFWE43ZFNnRGRkdnV2R1FORFdPWWxHWmhmNUZIVy81ZHJQSHVPOXp1eVVHK01NaTFpUCtSQk1QUmcKSWU2djhCcE9ncnNnZHRtWExhNFZNc1BNKzBYZkQwSDhjU2YvMkg2V1M0LzdEOEF1bG5QSW9LY1krRkxKUEFtMwpJVFI3L2w2UTBJUXVNU3c2QkxLYWZCRm5CVmNUUVNIN3lKZEFKNWdINFZZRHIyamtVWkwzQWdNQkFBR2pVekJSCk1CMEdBMVVkRGdRV0JCU2Y5RDVGS3dISUY3eFdxRi80OG4rci9SVFEzakFmQmdOVkhTTUVHREFXZ0JTZjlENUYKS3dISUY3eFdxRi80OG4rci9SVFEzakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFCN1BsMjkrclJ2eHArVHhLT3RCZGRLeEhhRTJVRUxuYmlkaFUvMTZRbW51VmlCQVhidUVSSEF2Y0phCm5hb1plY0JVQVJ0aUxYT2poOTFBNkFvNVpET2RETllOUkNnTGI2czdDVVhSKzNLenZWRmNJVFRSdGtTTkxKMTUKZzRoallyQUtEWTFIM09zd1EvU3JoTG9GQndneGJJQ1F5eFNLaXQ0OURrK2V4c3puMUJFNzE2aWlJVmdZT0daTwp5SWF5ekJZdW1Gc3M0MGprbWhsbms1ZW5hYjhJTDRUcXBDZS9xYnZtNXdOaktaVVozamJsM2QxVWVtcVlOdVlWCmNFY1o0UXltQUJZS3k0VkUzVFJZUmJJZGV0NFY2dVlIRjVZUHlFRWlZMFRVZStYVVJaVkFtaU9jcmtqblVIT3gKMWJqelJxSlpMNVR3b0ZDZzVlZUR6dVk0WlRjYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==

                monitoring:
                  prometheus_service_account: system:serviceaccount:monitoring:prometheus-k8s

                      
                network_policies:
                  enabled: false
                  ingress:
                    enabled: true
                    labels:
                      kubernetes.io/metadata.name: ingress-nginx
                  monitoring:
                    enabled: true
                    labels:
                      kubernetes.io/metadata.name: monitoring
                  apiserver:
                    enabled: true
                    labels:
                      kubernetes.io/metadata.name: kube-system

                services:
                  enable_tokenrequest: false
                  token_request_audience: https://kubernetes.default.svc.cluster.local
                  token_request_expiration_seconds: 600
                  node_selectors: []
                  liveness_probe:
                  - /usr/local/openunison/bin/check_alive.sh
                  - https://127.0.0.1:8443/auth/idp/k8sIdp/.well-known/openid-configuration
                  - issuer
                  - https://127.0.0.1:8443/check_alive
                  - Anonymous
                  readiness_probe:
                  - /usr/local/openunison/bin/check_alive.sh
                  - https://127.0.0.1:8443/auth/idp/k8sIdp/.well-known/openid-configuration
                  - issuer
                  - https://127.0.0.1:8443/check_alive
                  - Anonymous
                  
                openunison:
                  replicas: 1
                  non_secret_data:
                    K8S_DB_SSO: oidc
                    SHOW_PORTAL_ORGS: "false"
                    K8S_DEPLOYMENT_NAME: "$nsName$"
                  secrets: []
                  html:
                    image: ghcr.io/openunison/openunison-k8s-react:0.0.1
                    legacy: false
                  enable_provisioning: false
                  # management_proxy:
                  #   enabled: true
                  #   external_admin_group: k8s-namespace-administrators-k8s-$nameSpace$
                  #   external_suffix: -external
                  #   host: api-proxy-$nsName$.apps.{{ .Values.vcluster.ip }}.nip.io
                  #   remote:
                  #       issuer: https://#[OU_HOST]/auth/idp/remotek8s
                  use_standard_jit_workflow: true
                  az_groups:
                  - k8s-namespace-administrators-k8s-$nameSpace$-external
        srcType: yaml
        writeToRequest: "$useGit$"
        requestAttribute: git-secret-cluster-k8s-$nameSpace$
        path: /yaml/ns/$nameSpace$/configmaps/vcluster-openunison-$nsName$.yaml


    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
      params: 
        targetName: k8s
        template: |-
            apiVersion: batch/v1
            kind: Job
            metadata:
              name: onboard-vcluster-openunison-$nsName$
              namespace: {{ .Release.Namespace }}
            labels:
              name: vcluster-$nsName$
              app.kubernetes.io/name: openunison
              app.kubernetes.io/instance: openunison-{{ .Release.Name }}
              app.kubernetes.io/component: openunison-vcluster
              app.kubernetes.io/part-of: openunison
            spec:
              parallelism: 1
              completions: 1
              backoffLimit: 3
              selector:
                matchLabels:
                  job-name: onboard-vcluster-openunison-$nsName$
              template:
                metadata:
                  name: vcluster-onboard-openunison-$nsName$
                  namespace: {{ .Release.Namespace }}
                  labels:
                    job-name: onboard-vcluster-openunison-$nsName$
                spec:
                    containers:
                    - args:
                        - /usr/local/openunison/onboard-cluster.sh
                      image: {{ .Values.vcluster.job_image }}
                      imagePullPolicy: Always
                      name: vcluster-onboard-openunison
                      resources: {}
                      volumeMounts:
                        - mountPath: /etc/openunison
                          name: openunison-helm-values
                      env:
                      - name: VCLUSTER_NAME
                        value: $nsName$
                      - name: VCLUSTER_NAMESPACE
                        value: $nsName$
                      - name: TREMOLO_HELM_REPO
                        value: https://nexus.tremolo.io/repository/helm/
                      - name: K8S_DASHBOARD_HELM_REPO
                        value: https://kubernetes.github.io/dashboard/
                      - name: VCLUSTER_LABEL
                        value: $nsName$
                      - name: CA_CRT
                        value: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lVYmtiS2ZRN29ldXJuVHpyeWdIL0dDS0kzNkUwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF3d05aVzUwWlhKd2NtbHpaUzFqWVRBZUZ3MHlNakV4TURjeE5EUTFNakphRncwegpNakV4TURReE5EUTFNakphTUJneEZqQVVCZ05WQkFNTURXVnVkR1Z5Y0hKcGMyVXRZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNucVZ3eVFvMjJyRzZuVVpjU2UvR21WZnI5MEt6Z3V4MDkKNDY4cFNTUWRwRHE5UlRRVU92ZkFUUEJXODF3QlJmUDEvcnlFaHNocnVBS2E5LzVoKzVCL3g4bmN4VFhwbThCNwp2RDdldHY4V3VyeUtQc0lMdWlkT0QwR1FTRVRvNzdBWE03RmZpUk9yMDFqN3c2UVB3dVB2QkpTcDNpa2lDL0RjCnZFNjZsdklFWE43ZFNnRGRkdnV2R1FORFdPWWxHWmhmNUZIVy81ZHJQSHVPOXp1eVVHK01NaTFpUCtSQk1QUmcKSWU2djhCcE9ncnNnZHRtWExhNFZNc1BNKzBYZkQwSDhjU2YvMkg2V1M0LzdEOEF1bG5QSW9LY1krRkxKUEFtMwpJVFI3L2w2UTBJUXVNU3c2QkxLYWZCRm5CVmNUUVNIN3lKZEFKNWdINFZZRHIyamtVWkwzQWdNQkFBR2pVekJSCk1CMEdBMVVkRGdRV0JCU2Y5RDVGS3dISUY3eFdxRi80OG4rci9SVFEzakFmQmdOVkhTTUVHREFXZ0JTZjlENUYKS3dISUY3eFdxRi80OG4rci9SVFEzakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFCN1BsMjkrclJ2eHArVHhLT3RCZGRLeEhhRTJVRUxuYmlkaFUvMTZRbW51VmlCQVhidUVSSEF2Y0phCm5hb1plY0JVQVJ0aUxYT2poOTFBNkFvNVpET2RETllOUkNnTGI2czdDVVhSKzNLenZWRmNJVFRSdGtTTkxKMTUKZzRoallyQUtEWTFIM09zd1EvU3JoTG9GQndneGJJQ1F5eFNLaXQ0OURrK2V4c3puMUJFNzE2aWlJVmdZT0daTwp5SWF5ekJZdW1Gc3M0MGprbWhsbms1ZW5hYjhJTDRUcXBDZS9xYnZtNXdOaktaVVozamJsM2QxVWVtcVlOdVlWCmNFY1o0UXltQUJZS3k0VkUzVFJZUmJJZGV0NFY2dVlIRjVZUHlFRWlZMFRVZStYVVJaVkFtaU9jcmtqblVIT3gKMWJqelJxSlpMNVR3b0ZDZzVlZUR6dVk0WlRjYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                          - "all"
                    dnsPolicy: ClusterFirst
                    serviceAccount: openunison-orchestra
                    serviceAccountName: openunison-orchestra
                    restartPolicy: OnFailure
                    {{ if .Capabilities.APIVersions.Has "project.openshift.io/v1/Project" }}
                    securityContext:
                      seccompProfile:
                        type: RuntimeDefault
                      runAsNonRoot: true
                    {{ else }}
                    securityContext:
                      fsGroup: 433
                      supplementalGroups: [433]
                      seccompProfile:
                        type: RuntimeDefault
                      runAsNonRoot: true
                      runAsUser: 431
                      runAsGroup: 433
                    {{ end }}
                    volumes:
                    - name: openunison-helm-values
                      configMap:
                        name: vcluster-openunison-$nsName$
        srcType: yaml
    
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.WaitForStatus
      params:
        holdingTarget: k8s
        namespace: openunison
        target: k8s
        uri: /api/v1/namespaces/$nameSpace$/configmaps/deploymentcomplete
        label: wait-for-onboard-vcluster-$nsName$
        conditions:
        - .metadata.name=deploymentcomplete

    # integration complete, cleanup in onboarded cluster
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
      params:
        targetName: k8s
        kind:  ConfigMap
        url: /api/v1/namespaces/$nameSpace$/configmaps/deploymentcomplete

    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
      params:
        targetName: k8s
        kind:  Job
        url: /apis/batch/v1/namespaces/openunison/jobs/onboard-vcluster-openunison-$nsName$

    # create a provisioning target so workflows can interact directly with the vcluster
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
      params: 
        targetName: k8s
        template: |-
            apiVersion: openunison.tremolo.io/v1
            kind: Target
            metadata:
              name: k8s-vcluster-$nsName$
              namespace: {{ .Release.Namespace }}
              labels:
                name: k8s-vcluster-$nsName$
                app.kubernetes.io/name: openunison
                app.kubernetes.io/instance: openunison-{{ .Release.Name }}
                app.kubernetes.io/component: openunison-vcluster
                app.kubernetes.io/part-of: openunison
            spec:
              className: com.tremolosecurity.unison.openshiftv3.OpenShiftTarget
              params:
              - name: url
                value: https://$nsName$.$nsName$.svc
              - name: tokenType
                value: certificate
              - name: certSecretURI
                value: /api/v1/namespaces/$nsName$/secrets/vc-$nsName$
              secretParams: []
              targetAttributes:
              - name: fullName
                source: displayName
                sourceType: user
        srcType: yaml
