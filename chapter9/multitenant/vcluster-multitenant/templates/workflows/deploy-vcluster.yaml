---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: deploy-vcluster
  namespace: {{ .Release.Namespace }}
spec:
  description: Creates the vCluster MySQL DB
  inList: false
  label: Create vCluster DB
  orgId: 43625c4c-43a5-4e48-89da-7005a60cfcff
  tasks: |-
    
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
      params: 
        targetName: k8s
        template: |-
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: vcluster-$nsName$
              namespace: {{ .Release.Namespace }}
            labels:
              name: vcluster-$nsName$
              app.kubernetes.io/name: openunison
              app.kubernetes.io/instance: openunison-{{ .Release.Name }}
              app.kubernetes.io/component: openunison-vcluster
              app.kubernetes.io/part-of: openunison
            annotations:
              tremolo.io/managedByGit: "$useGit$"
            data:
              vcluster-values.yaml: |-
                # Enable HA mode
                enableHA: true

                # Scale up k3s replicas
                replicas: 1

                sync:
                  ingresses:
                    enabled: true

                syncer:
                  extraArgs:
                  - --service-account-token-secrets=true
                
                # Set external datastore endpoint
                vcluster:
                  env:
                    - name: K3S_DATASTORE_ENDPOINT
                      value: mysql://vcluster_$nsName$@tcp(mysql.mysql.svc:3306)/vcluster_$nsName$
                    - name: K3S_DATASTORE_CERTFILE
                      value: /etc/mysql-tls/tls.crt
                    - name: K3S_DATASTORE_KEYFILE
                      value: /etc/mysql-tls/tls.key
                    - name: K3S_DATASTORE_CAFILE
                      value: /etc/mysql-tls/ca.crt
                  volumeMounts:
                  - mountPath: /etc/mysql-tls
                    name: mysql-tls
                  # - mountPath: /data
                  #   name: data
                volumes:
                - name: mysql-tls
                  secret:
                    secretName: vcluster-client-tls

                # Disable persistent storage as all data (including bootstrap data) is stored in external datastore
                storage:
                  persistence: false

                # Scale up CoreDNS replicas
                coredns:
                  replicas: 1

        srcType: yaml
        writeToRequest: "$useGit$"
        requestAttribute: git-secret-cluster-k8s-$nameSpace$
        path: /yaml/ns/$nameSpace$/certificates/vcluster-$nsName$.yaml


    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.CreateK8sObject
      params: 
        targetName: k8s
        template: |-
            apiVersion: batch/v1
            kind: Job
            metadata:
              name: onboard-vcluster-$nsName$
              namespace: {{ .Release.Namespace }}
            labels:
              name: vcluster-$nsName$
              app.kubernetes.io/name: openunison
              app.kubernetes.io/instance: openunison-{{ .Release.Name }}
              app.kubernetes.io/component: openunison-vcluster
              app.kubernetes.io/part-of: openunison
            spec:
              parallelism: 1
              completions: 1
              backoffLimit: 3
              selector:
                matchLabels:
                  job-name: onboard-vcluster-$nsName$
              template:
                metadata:
                  name: vcluster-onboard-$nsName$
                  namespace: {{ .Release.Namespace }}
                  labels:
                    job-name: onboard-vcluster-$nsName$
                spec:
                    containers:
                    - args:
                        - bash
                        - /scripts/deploy-vcluster.sh
                      image: {{ .Values.vcluster.job_image }}
                      imagePullPolicy: Always
                      name: vcluster-onboard
                      resources: {}
                      volumeMounts:
                        - mountPath: /etc/openunison
                          name: vcluster-helm-values
                        - mountPath: /scripts
                          name: vcluster-scripts
                      env:
                      - name: VCLUSTER_NAME
                        value: $nsName$
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                          - "all"
                    dnsPolicy: ClusterFirst
                    serviceAccount: openunison-orchestra
                    serviceAccountName: openunison-orchestra
                    restartPolicy: OnFailure
                    {{ if .Capabilities.APIVersions.Has "project.openshift.io/v1/Project" }}
                    securityContext:
                      seccompProfile:
                        type: RuntimeDefault
                      runAsNonRoot: true
                    {{ else }}
                    securityContext:
                      fsGroup: 433
                      supplementalGroups: [433]
                      seccompProfile:
                        type: RuntimeDefault
                      runAsNonRoot: true
                      runAsUser: 431
                      runAsGroup: 433
                    {{ end }}
                    volumes:
                    - name: vcluster-helm-values
                      configMap:
                        name: vcluster-$nsName$
                    - name: vcluster-scripts
                      configMap:
                        name: vcluster-scripts
        srcType: yaml
    
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.WaitForStatus
      params:
        holdingTarget: k8s
        namespace: openunison
        target: k8s
        uri: /api/v1/namespaces/$nameSpace$/configmaps/deploymentcomplete
        label: wait-for-onboard-vcluster-$nsName$
        conditions:
        - .metadata.name=deploymentcomplete

    # integration complete, cleanup in onboarded cluster
    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
      params:
        targetName: k8s
        kind:  ConfigMap
        url: /api/v1/namespaces/$nameSpace$/configmaps/deploymentcomplete

    - taskType: customTask
      className: com.tremolosecurity.provisioning.tasks.DeleteK8sObject
      params:
        targetName: k8s
        kind:  Job
        url: /apis/batch/v1/namespaces/openunison/jobs/onboard-vcluster-$nsName$