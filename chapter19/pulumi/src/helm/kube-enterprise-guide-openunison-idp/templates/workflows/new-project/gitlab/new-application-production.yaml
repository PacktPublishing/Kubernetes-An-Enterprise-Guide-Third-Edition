---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: new-application-prod
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-{{ .Release.Name }}
    app.kubernetes.io/component: openunison-workflows
    app.kubernetes.io/part-of: openunison
spec:
  description: create production application infrastructure
  inList: false
  label: new application in production
  orgId: 43625c4c-43a5-4e48-89da-7005a60cfcff
  dynamicConfiguration:
    dynamic: false
    className: ""
    params: []
  tasks: |-
    # create an operations project in gitlab
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateProject
      params:
        namespace: $nameSpace$-prod
        name: $nameSpace$-application
        description: Application production
        issuesEnabled: "true"
        mergeRequestsEnabled: "true"
        wikiEnabled: "true"
        snipitsEnabled: "true"
        visibility: "2"
        targetName: gitlab
        gitSshHost: {{ .Values.gitlab_ssh_host | quote }}
        createWebhook: "false"

    # create the host variable used by CI/CD for gitlab host
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateVariable
      params:
        targetName: gitlab
        namespace: $nameSpace$-prod
        project: $nameSpace$-application
        key: GITLAB_HOST
        value: {{ .Values.gitlab_ssh_host | quote }}
        varType: ENV_VAR
        protectedVar: "false"
        masked: "false"
        environment: "*"

    # create the host variable used by CI/CD for harbor host
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateVariable
      params:
        targetName: gitlab
        namespace: $nameSpace$-prod
        project: $nameSpace$-application
        key: HARBOR_HOST
        value: "harbor.{{ .Values.cp_dns_suffix }}"
        varType: ENV_VAR
        protectedVar: "false"
        masked: "false"
        environment: "*"

    # create the host variable used by CI/CD for the namespace name
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateVariable
      params:
        targetName: gitlab
        namespace: $nameSpace$-prod
        project: $nameSpace$-application
        key: NAMESPACE
        value: "$nameSpace$"
        varType: ENV_VAR
        protectedVar: "false"
        masked: "false"
        environment: "*"

    # add CA cert
    - taskType: customTask
      className: com.tremolosecurity.provisioning.customTasks.JavaScriptTask
      params:
        javaScript: |-
          function init(task,params) {
            // nothing to do
          }

          function reInit(task) {
            // do nothing
          }

          function doTask(user,request) {
            JSUtils = Java.type("com.tremolosecurity.util.JSUtils");
            var base64Cert = "{{ .Values.cacert }}";
            var decodedCert = JSUtils.base64Decode(base64Cert);
            request.put("decodedCaCert",decodedCert);
          
            return true;
          }
    
    # create the host variable used by CI/CD for the enterprise ca certificate
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateVariable
      params:
        targetName: gitlab
        namespace: $nameSpace$-prod
        project: $nameSpace$-application
        key: ca_certificate
        value: "$decodedCaCert$"
        varType: FILE
        protectedVar: "false"
        masked: "false"
        environment: "*"
        
    

    # create a git file so there's something in the repo
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.CreateGitFile
      params:
        targetName: gitlab
        namespace: $nameSpace$-prod
        project: $nameSpace$-application
        branch: main
        path: README.md
        content: |-
          # $nameSpace$-application 
  
          Fork this project to create to create your application.
        commitMessage: initializing the repository

    # approvers need to be able to merge pull requests
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject
      params:
        groupName: k8s-namespace-owners-k8s-$nameSpace$-internal
        targetName: gitlab
        accessLevel: MAINTAINER

    # operations and developer staff need to be able to fork projects
    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject
      params:
        groupName: k8s-namespace-operations-k8s-$nameSpace$-internal
        targetName: gitlab
        accessLevel: DEVELOPER

    - taskType: customTask
      className: com.tremolosecurity.unison.gitlab.provisioning.tasks.AddGroupToProject
      params:
        groupName: k8s-namespace-developer-k8s-$nameSpace$-internal
        targetName: gitlab
        accessLevel: DEVELOPER

   



    