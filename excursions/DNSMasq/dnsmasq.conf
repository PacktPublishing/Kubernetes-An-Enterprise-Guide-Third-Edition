#
# This configuration fie was created using a script that parses the Hosts IP addresse and assigns the first IP found to the first domain, foowidgets.com
#
# The DNS forwarders are configured to use a local DNS server, 10.2.1.14, and a backup server is added to use Cloudflares DNS server, 1.1.1.1
#
# Implementation Steps:
#
# 1.  Create a Kubernetes cluster, or cluster(s) - Any Kubernetes deployment can be used, we use KinD for development clusters.
# 2.  Edit the dnsmasq.conf configuration file to reflect your local IP requirements.
# 2.  Deploy the dnsmasq container on your local host using the Docker run command in the repo README
# 3.  Any local machines that you want to use for testing will need to have their DNS resolver updated to use the IP of your main NIC on the host
#     This will allow any configured machine to query the dnsmasq container to resolve the wildcard domains in this configuration file.
#     While still forwarding any other request to your edge DNS server, or Cloudflare's public DNS server.

# Enable Logging
log-queries

# dont use hosts nameservers
no-resolv

# This section defines where DNS queries will forward for any domain not defined in the next section
server=10.2.1.14
server=1.1.1.1

# Define the Wildcard domains you want below.  Each domain should point to a different IP for the defined domain.
# In this example, we have two KinD clusters, one for a domain called foowidgets.com which will send all traffic to 10.2.1.39 (the worker node for this KinD cluster.
address=/foowidgets.com/10.2.1.39
