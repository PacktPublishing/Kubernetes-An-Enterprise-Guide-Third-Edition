apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: my-ext-secret
spec:
  provider:
    vault:
      server: "https://vault.apps.IPADDR.nip.io"
      path: "secret"
      version: "v1"
      caProvider:
        # Can be Secret or ConfigMap
        type: "ConfigMap"
        name: "cacerts"
        key: "tls.crt"
        namespace: "my-ext-secret"
      auth:
        # Authenticate against Vault using a Kubernetes ServiceAccount
        # token stored in a Secret.
        # https://www.vaultproject.io/docs/auth/kubernetes
        kubernetes:
          # Path where the Kubernetes authentication backend is mounted in Vault
          mountPath: "kubernetes"
          # A required field containing the Vault Role to assume.
          role: "extsecret"
          # Optional service account field containing the name
          # of a kubernetes ServiceAccount
          serviceAccountRef:
            name: "ext-secret-vault"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: my-external-secret
  namespace: my-ext-secret
spec:
  refreshInterval: 1m           # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: SecretStore
    name: vault-backend               # name of the SecretStore (or kind specified)
  target:
    name: secret-to-be-created  # name of the k8s Secret to be created
    creationPolicy: Owner
  data:
    - secretKey: somepassword
      remoteRef:
        key: /data/extsecret/config
        property: some-password